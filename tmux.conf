set -g default-terminal 'screen-256color'
set -g mouse on
# Use Ctrl+A as the prefix key
set -g prefix C-a
unbind C-b
bind C-a send-prefix


set-option -g status-style bg=colour235,fg=colour136,default # bg=base02, fg=yellow


# C-a r to reload the config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."


bind-key v split-window -h
bind-key s split-window
#### color (Solarized 256)
set -g status-style bg=colour235,fg=colour136
setw -g window-status-style fg=colour244
setw -g window-status-current-style fg=colour166
setw -g window-status-activity-style fg=colour61
setw -g window-status-bell-style fg=colour61
set -g pane-border-style fg=colour235
set -g pane-active-border-style fg=colour240
set -g message-style bg=colour235,fg=colour166

# pane number display
set -g display-panes-active-colour colour166 #blue
set -g display-panes-colour colour33 #orange

# clock
setw -g clock-mode-colour colour64 #green

# pane border
set-option -g pane-border-style fg=colour235 #fg=base02
set-option -g pane-active-border-style fg=colour240 #fg=base01

# message text
set-option -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-left '#{?pane_input_off,#[fg=colour160],#[fg=colour136]}[#[fg=colour136]#S:#I.#P#{?pane_input_off,#[fg=colour160],#[fg=colour136]}] '
set -g status-right '#[fg=colour166]#([ "$(tmux show-option -g prefix)" != "prefix C-a" ] && echo "($(tmux show-option -g prefix | cut -c 8-)) ")#[fg=colour33]%d %b %Y #{?client_prefix,#[fg=colour160],#[fg=colour61]}- #[fg=colour64]%I:%M %p #{?client_prefix,#[fg=colour160],#[fg=colour61]}- #[fg=colour37]#([ -f $HOME/.name ] && cat $HOME/.name || hostname)'
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix



# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# don't wait for escape sequences
set -sg escape-time 0

# load the local config
#source-file ~/.tmux.conf.local

# C-a c to create new sessions
# C-a p to move to previous session
# C-a n to move to next session
# C-a + # to move to the numbered session
